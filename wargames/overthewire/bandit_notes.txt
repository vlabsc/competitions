Security Wargame

OverTheWire
http://overthewire.org/wargames/bandit/

--------------------------------------------------------------------------------------------------------------------
level0
ssh bandit0@bandit.labs.overthewire.org
password bandit0
cat readme
boJ9jbbUNNfktd78OOpsqOltutMc3MY1 -> password for level1

--------------------------------------------------------------------------------------------------------------------
level1
ssh bandit1@bandit.labs.overthewire.org
password: boJ9jbbUNNfktd78OOpsqOltutMc3MY1
cat ./-
CV1DtqXWVFXTvM2F0k09SHz0YwRINYA9

--------------------------------------------------------------------------------------------------------------------
leve2
ssh bandit2@bandit.labs.overthewire.org
password: CV1DtqXWVFXTvM2F0k09SHz0YwRINYA9
bandit2@melinda:~$ ls
spaces in this filename
bandit2@melinda:~$ cat *
UmHadQclWmgdLOKQ3YNgjWxGoRMb5luK

--------------------------------------------------------------------------------------------------------------------
level3
ssh bandit3@bandit.labs.overthewire.org
passwd: UmHadQclWmgdLOKQ3YNgjWxGoRMb5luK

bandit3@melinda:~$ ls
inhere
bandit3@melinda:~$ cd inhere/
bandit3@melinda:~/inhere$ find
.
./.hidden


bandit3@melinda:~/inhere$ cat .hidden 
pIwrPrtPN36QITSp3EQaw936yaFoFgAB
bandit3@melinda:~/inhere$ 

--------------------------------------------------------------------------------------------------------------------
level4
ssh bandit4@bandit.labs.overthewire.org
password: pIwrPrtPN36QITSp3EQaw936yaFoFgAB
bandit4@melinda:~/inhere$ ls
-file00  -file01  -file02  -file03  -file04  -file05  -file06  -file07  -file08  -file09

--------------------------------------------------------------------------------------------------------------------
level5
ssh bandit5@bandit.labs.overthewire.org
password: koReBOKuIDDepwhWk7jZC0RTdopnAYKh

The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties: - human-readable - 1033 bytes in size - not executable

melinda:~/inhere$ ls
maybehere00  maybehere03  maybehere06  maybehere09  maybehere12  maybehere15  maybehere18
maybehere01  maybehere04  maybehere07  maybehere10  maybehere13  maybehere16  maybehere19
maybehere02  maybehere05  maybehere08  maybehere11  maybehere14  maybehere17

bandit5@melinda:~/inhere$ find . -size 1033c -> c being 'bytes'
./maybehere07/.file2

bandit5@melinda:~/inhere$ cat ./maybehere07/.file2
DXjZPULLxYr17uwoI01bNLQbtFemEgo7

--------------------------------------------------------------------------------------------------------------------
level6
ssh bandit6@bandit.labs.overthewire.org
password: DXjZPULLxYr17uwoI01bNLQbtFemEgo7

The password for the next level is stored somewhere on the server and has all of the following properties: - owned by user bandit7 - owned by group bandit6 - 33 bytes in size

find / -size 33c -user bandit7 -group bandit6  2>&1 | grep -v "Permission denied"
/var/lib/dpkg/info/bandit7.password

grep -v "Permission denied" -> ignores all "Permission denied" strings (error messages).

bandit6@melinda:/$ cat /var/lib/dpkg/info/bandit7.password
HKBPTKQnIay4Fw76bEy8PVxKEDQRKTzs

--------------------------------------------------------------------------------------------------------------------
level7
ssh bandit7@bandit.labs.overthewire.org
password: HKBPTKQnIay4Fw76bEy8PVxKEDQRKTzs

The password for the next level is stored in the file data.txt next to the word millionth

bandit7@melinda:~$ cat data.txt | grep millionth 
millionth	cvX2JJa4CFALtqS87jk27qwqGhBM9plV

--------------------------------------------------------------------------------------------------------------------
level 8
ssh bandit8@bandit.labs.overthewire.org
password: cvX2JJa4CFALtqS87jk27qwqGhBM9plV

The password for the next level is stored in the file data.txt and is the only line of text that occurs only once

bandit8@melinda:~$ strings data.txt | sort | uniq -c | grep "1 "
1 UsvVyFSfZZWbi6wgC7dAFyFuR6jQQUhR

--------------------------------------------------------------------------------------------------------------------
level 9
ssh bandit9@bandit.labs.overthewire.org
password: UsvVyFSfZZWbi6wgC7dAFyFuR6jQQUhR

The password for the next level is stored in the file data.txt in one of the few human-readable strings, beginning with several ‘=’ characters.

bandit9@melinda:~$ strings data.txt | grep "=" 
epr~F=K
7?YD=
?M=HqAH
/(Ne=
C=_"
I========== the6
z5Y=
`h(8=`
n\H=;
========== password
========== ism
N$=&
l/a=L)
f=C(
========== truKLdjsbJ5g7yyJ2X2R0o3a5HQJFuLk
ie)=5e
bandit9@melinda:~$ 

--------------------------------------------------------------------------------------------------------------------
level 10
ssh bandit10@bandit.labs.overthewire.org
password: truKLdjsbJ5g7yyJ2X2R0o3a5HQJFuLk

The password for the next level is stored in the file data.txt, which contains base64 encoded data

bandit10@melinda:~$ base64 -d data.txt 
The password is IFukwKGsFW8MOq3IRFqrxE1hxTNEbUPR

--------------------------------------------------------------------------------------------------------------------
level 11
ssh bandit11@bandit.labs.overthewire.org
password: IFukwKGsFW8MOq3IRFqrxE1hxTNEbUPR

The password for the next level is stored in the file data.txt, where all lowercase (a-z) and uppercase (A-Z) letters have been rotated by 13 positions

cat data.txt
Gur cnffjbeq vf 5Gr8L4qetPEsPk8htqjhRK8XSP6x2RHh

cat data.txt | tr 'a-zA-Z' 'n-za-mN-ZA-M'

tr 'a-zA-Z' 'n-za-mN-ZA-M'
  this is like tr 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ' 'nopqrstuvwxyzabcdefghijklmNOPQRSTUVWXYZABCDEFGHIJKLM'

The password is 5Te8Y4drgCRfCx8ugdwuEX8KFC6k2EUu

--------------------------------------------------------------------------------------------------------------------
level 12
ssh bandit12@bandit.labs.overthewire.org
password: 5Te8Y4drgCRfCx8ugdwuEX8KFC6k2EUu

The password for the next level is stored in the file data.txt, which is a hexdump of a file that has been repeatedly compressed. For this level it may be useful to create a directory under /tmp in which you can work using mkdir. For example: mkdir /tmp/myname123. Then copy the datafile using cp, and rename it using mv (read the manpages!)

xxd  creates  a  hex  dump  of a given file or standard input.  It can also convert a hex dump back to its original binary form. 

xxd  -r data.txt data.gz
then frequently decompressing using gunzip, tar and bzip2 commands

at data8
The password is 8ZjyCRiBWFYkneahHwxCv3wb2a1ORpYL

--------------------------------------------------------------------------------------------------------------------
level 13
ssh bandit13@bandit.labs.overthewire.org
password: 8ZjyCRiBWFYkneahHwxCv3wb2a1ORpYL

The password for the next level is stored in /etc/bandit_pass/bandit14 and can only be read by user bandit14. For this level, you don’t get the next password, but you get a private SSH key that can be used to log into the next level. Note: localhost is a hostname that refers to the machine you are working on

ssh bandit14@localhost -i sshkey.private

bandit14@melinda:~$ cat /etc/bandit_pass/bandit14 
4wcYUJFw0k0XLShlDzztnTBHiqxU3b3e

--------------------------------------------------------------------------------------------------------------------
level 14
ssh bandit14@bandit.labs.overthewire.org
password: 4wcYUJFw0k0XLShlDzztnTBHiqxU3b3e

The password for the next level can be retrieved by submitting the password of the current level to port 30000 on localhost.

bandit14@melinda:~$ echo 4wcYUJFw0k0XLShlDzztnTBHiqxU3b3e | nc localhost 30000
Correct!
BfMYroe26WYalil77FoDi9qh59eK5xNr

--------------------------------------------------------------------------------------------------------------------
level 15
ssh bandit15@bandit.labs.overthewire.org
password: BfMYroe26WYalil77FoDi9qh59eK5xNr

The password for the next level can be retrieved by submitting the password of the current level to port 30001 on localhost using SSL encryption.

Helpful note: Getting “HEARTBEATING” and “Read R BLOCK”? Use -quiet and read the “CONNECTED COMMANDS” section in the manpage. Next to ‘R’ and ‘Q’, the ‘B’ command also works in this version of that command…


bandit15@melinda:~$ openssl s_client -quiet -connect localhost:30001
verify return:1
BfMYroe26WYalil77FoDi9qh59eK5xNr
Correct!
cluFn7wTiGryunymYOu4RcffSxQluehd

read:errno=0

--------------------------------------------------------------------------------------------------------------------
level 16
ssh bandit16@bandit.labs.overthewire.org
password: cluFn7wTiGryunymYOu4RcffSxQluehd


The password for the next level can be retrieved by submitting the password of the current level to a port on localhost in the range 31000 to 32000. First find out which of these ports have a server listening on them. Then find out which of those speak SSL and which don’t. There is only 1 server that will give the next credentials, the others will simply send back to you whatever you send to it.


bandit16@melinda:~$ openssl s_client -connect localhost:31790
cluFn7wTiGryunymYOu4RcffSxQluehd
Correct!

-----BEGIN RSA PRIVATE KEY-----
MIIEogIBAAKCAQEAvmOkuifmMg6HL2YPIOjon6iWfbp7c3jx34YkYWqUH57SUdyJ
imZzeyGC0gtZPGujUSxiJSWI/oTqexh+cAMTSMlOJf7+BrJObArnxd9Y7YT2bRPQ
Ja6Lzb558YW3FZl87ORiO+rW4LCDCNd2lUvLE/GL2GWyuKN0K5iCd5TbtJzEkQTu
DSt2mcNn4rhAL+JFr56o4T6z8WWAW18BR6yGrMq7Q/kALHYW3OekePQAzL0VUYbW
JGTi65CxbCnzc/w4+mqQyvmzpWtMAzJTzAzQxNbkR2MBGySxDLrjg0LWN6sK7wNX
x0YVztz/zbIkPjfkU1jHS+9EbVNj+D1XFOJuaQIDAQABAoIBABagpxpM1aoLWfvD
KHcj10nqcoBc4oE11aFYQwik7xfW+24pRNuDE6SFthOar69jp5RlLwD1NhPx3iBl
J9nOM8OJ0VToum43UOS8YxF8WwhXriYGnc1sskbwpXOUDc9uX4+UESzH22P29ovd
d8WErY0gPxun8pbJLmxkAtWNhpMvfe0050vk9TL5wqbu9AlbssgTcCXkMQnPw9nC
YNN6DDP2lbcBrvgT9YCNL6C+ZKufD52yOQ9qOkwFTEQpjtF4uNtJom+asvlpmS8A
vLY9r60wYSvmZhNqBUrj7lyCtXMIu1kkd4w7F77k+DjHoAXyxcUp1DGL51sOmama
+TOWWgECgYEA8JtPxP0GRJ+IQkX262jM3dEIkza8ky5moIwUqYdsx0NxHgRRhORT
8c8hAuRBb2G82so8vUHk/fur85OEfc9TncnCY2crpoqsghifKLxrLgtT+qDpfZnx
SatLdt8GfQ85yA7hnWWJ2MxF3NaeSDm75Lsm+tBbAiyc9P2jGRNtMSkCgYEAypHd
HCctNi/FwjulhttFx/rHYKhLidZDFYeiE/v45bN4yFm8x7R/b0iE7KaszX+Exdvt
SghaTdcG0Knyw1bpJVyusavPzpaJMjdJ6tcFhVAbAjm7enCIvGCSx+X3l5SiWg0A
R57hJglezIiVjv3aGwHwvlZvtszK6zV6oXFAu0ECgYAbjo46T4hyP5tJi93V5HDi
Ttiek7xRVxUl+iU7rWkGAXFpMLFteQEsRr7PJ/lemmEY5eTDAFMLy9FL2m9oQWCg
R8VdwSk8r9FGLS+9aKcV5PI/WEKlwgXinB3OhYimtiG2Cg5JCqIZFHxD6MjEGOiu
L8ktHMPvodBwNsSBULpG0QKBgBAplTfC1HOnWiMGOU3KPwYWt0O6CdTkmJOmL8Ni
blh9elyZ9FsGxsgtRBXRsqXuz7wtsQAgLHxbdLq/ZJQ7YfzOKU4ZxEnabvXnvWkU
YOdjHdSOoKvDQNWu6ucyLRAWFuISeXw9a/9p7ftpxm0TSgyvmfLF2MIAEwyzRqaM
77pBAoGAMmjmIJdjp+Ez8duyn3ieo36yrttF5NSsJLAbxFpdlc1gvtGCWW+9Cq0b
dxviW8+TFVEBl1O4f7HVm6EpTscdDxU+bCXWkfjuRb7Dy9GOtt9JPsX8MBTakzh3
vBgsyi/sN3RqRBcGU40fOoZyfAMT8s1m/uYv52O6IgeuZ/ujbjY=
-----END RSA PRIVATE KEY-----

--------------------------------------------------------------------------------------------------------------------
level 17
ssh bandit17@bandit.labs.overthewire.org -i sshkey.private


There are 2 files in the homedirectory: passwords.old and passwords.new. The password for the next level is in passwords.new and is the only line that has been changed between passwords.old and passwords.new

NOTE: if you have solved this level and see ‘Byebye!’ when trying to log into bandit18, this is related to the next level, bandit19


initially the key will be ignored
Permissions 0664 for 'sshkey.private' are too open.
It is required that your private key files are NOT accessible by others.
This private key will be ignored.
bad permissions: ignore key: sshkey.private

the actual persmissions should be like this
-rw-r-----   1 bandit14 bandit13 1679 Nov 14  2014 sshkey.private
got from level 13

change the file permission
senthil@k7user:~/vlabs/wargames/overthewire$ chmod 0600 sshkey.private 
-rw------- 1 senthil senthil  1676 Aug 12 11:40 sshkey.private

now do ssh bandit17@bandit.labs.overthewire.org -i sshkey.private

bandit17@melinda:~$ diff passwords.old passwords.new 
42c42
< BS8bqB1kqkinKJjuxL6k072Qq9NRwQpR
---
> kfBf3eYk5BPBRzwjqutbbfE887SVc5Yd

--------------------------------------------------------------------------------------------------------------------
level 18
ssh -t bandit18@bandit.labs.overthewire.org /bin/sh
password: kfBf3eYk5BPBRzwjqutbbfE887SVc5Yd

The password for the next level is stored in a file readme in the homedirectory. Unfortunately, someone has modified .bashrc to log you out when you log in with SSH.

including '/bin/sh' in ssh command will allow only to run /bin/sh

$ cat readme
IueksS7Ubh8G3DCwVzrTd8rAVOwq3M5x

--------------------------------------------------------------------------------------------------------------------
level 19
ssh bandit19@bandit.labs.overthewire.org
password: IueksS7Ubh8G3DCwVzrTd8rAVOwq3M5x


To gain access to the next level, you should use the setuid binary in the homedirectory. Execute it without arguments to find out how to use it. The password for this level can be found in the usual place (/etc/bandit_pass), after you have used to setuid binary.

bandit19@melinda:~$ ./bandit20-do 
Run a command as another user.
  Example: ./bandit20-do id

bandit19@melinda:~$ ./bandit20-do cat /etc/bandit_pass/bandit20 
GbKksEFF4yrVs6il55v6gwY5aVje5f0j

--------------------------------------------------------------------------------------------------------------------
level 20
ssh bandit20@bandit.labs.overthewire.org
password: GbKksEFF4yrVs6il55v6gwY5aVje5f0j


There is a setuid binary in the homedirectory that does the following: it makes a connection to localhost on the port you specify as a commandline argument. It then reads a line of text from the connection and compares it to the password in the previous level (bandit20). If the password is correct, it will transmit the password for the next level (bandit21).

NOTE: To beat this level, you need to login twice: once to run the setuid command, and once to start a network daemon to which the setuid will connect.

NOTE 2: Try connecting to your own network daemon to see if it works as you think



bandit20@melinda:~$ nc -l -p 1234
GbKksEFF4yrVs6il55v6gwY5aVje5f0j
gE269g2h3mw3pwgrj0Ha9Uoqen1c9DGr


bandit20@melinda:~$ ./suconnect 1234
Read: GbKksEFF4yrVs6il55v6gwY5aVje5f0j
Password matches, sending next password

--------------------------------------------------------------------------------------------------------------------
level 21
ssh bandit21@bandit.labs.overthewire.org
password: gE269g2h3mw3pwgrj0Ha9Uoqen1c9DGr

A program is running automatically at regular intervals from cron, the time-based job scheduler. Look in /etc/cron.d/ for the configuration and see what command is being executed.


# set shell
SHELL = /bin/bash

30 3 14 8 0	echo " Test run "

bandit21@melinda:~$ cd /etc/cron.d/
bandit21@melinda:/etc/cron.d$ cat cronjob_bandit22
* * * * * bandit22 /usr/bin/cronjob_bandit22.sh &> /dev/null
bandit21@melinda:/etc/cron.d$ /usr/bin/cronjob_bandit22.sh 
chmod: changing permissions of '/tmp/t7O6lds9S0RqQh9aMcz6ShpAoZKF7fgv': Operation not permitted
/usr/bin/cronjob_bandit22.sh: line 3: /tmp/t7O6lds9S0RqQh9aMcz6ShpAoZKF7fgv: Permission denied
bandit21@melinda:/etc/cron.d$ cd /tmp/
bandit21@melinda:/tmp$ ls /tmp/t7O6lds9S0RqQh9aMcz6ShpAoZKF7fgv
/tmp/t7O6lds9S0RqQh9aMcz6ShpAoZKF7fgv
bandit21@melinda:/tmp$ ls /tmp/t7O6lds9S0RqQh9aMcz6ShpAoZKF7fgv -l
-rw-r--r-- 1 bandit22 bandit22 33 Aug 14 03:58 /tmp/t7O6lds9S0RqQh9aMcz6ShpAoZKF7fgv
bandit21@melinda:/tmp$ cat /tmp/t7O6lds9S0RqQh9aMcz6ShpAoZKF7fgv
Yk7owGAcWjwMVRwrTesJEwB7WVOiILLI

--------------------------------------------------------------------------------------------------------------------
level 22
ssh bandit22@bandit.labs.overthewire.org
password: Yk7owGAcWjwMVRwrTesJEwB7WVOiILLI

bandit22@melinda:/etc/cron.d$ cat cronjob_bandit23
* * * * * bandit23 /usr/bin/cronjob_bandit23.sh  &> /dev/null


bandit22@melinda:/tmp$ cat /usr/bin/cronjob_bandit23.sh    
#!/bin/bash

myname=$(whoami)
mytarget=$(echo I am user $myname | md5sum | cut -d ' ' -f 1)

echo "Copying passwordfile /etc/bandit_pass/$myname to /tmp/$mytarget"

cat /etc/bandit_pass/$myname > /tmp/$mytarget
bandit22@melinda:/tmp$ $(echo I am user hellp | md5sum | cut -d ' ' -f 1)
-bash: e021edf0ac54b6c420e3d0cf4d611def: command not found
bandit22@melinda:/tmp$ $(echo I am user helli | md5sum | cut -d ' ' -f 1)
-bash: 9e3d20c671739f42ab461d1d826a983f: command not found
bandit22@melinda:/tmp$ $(echo I am user bandit23 | md5sum | cut -d ' ' -f 1)
-bash: 8ca319486bfbbc3663ea0fbe81326349: command not found
bandit22@melinda:/tmp$ ls 8ca319486bfbbc3663ea0fbe81326349
8ca319486bfbbc3663ea0fbe81326349
bandit22@melinda:/tmp$ ls 8ca319486bfbbc3663ea0fbe81326349 -l
-rw-rw-r-- 1 bandit23 bandit23 33 Aug 14 04:35 8ca319486bfbbc3663ea0fbe81326349
bandit22@melinda:/tmp$ cat 8ca319486bfbbc3663ea0fbe81326349
jc1udXuA1tiHqjIsL8yaapX5XIAI6i0n


/tmp/8169b67bd894ddbb4412f91573b38db3
jc1udXuA1tiHqjIsL8yaapX5XIAI6i0n


--------------------------------------------------------------------------------------------------------------------
level 23
ssh bandit23@bandit.labs.overthewire.org
password: jc1udXuA1tiHqjIsL8yaapX5XIAI6i0n


bandit23@melinda:~$ cd /etc/cron.d/
bandit23@melinda:/etc/cron.d$ cat cronjob_bandit24
* * * * * bandit24 /usr/bin/cronjob_bandit24.sh &> /dev/null
bandit23@melinda:/etc/cron.d$ ls -l /usr/bin/cronjob_bandit24
ls: cannot access /usr/bin/cronjob_bandit24: No such file or directory
bandit23@melinda:/etc/cron.d$ ls -l /usr/bin/cronjob_bandit24.sh
-rwxr-x--- 1 bandit24 bandit23 257 May  3 12:32 /usr/bin/cronjob_bandit24.sh
bandit23@melinda:/etc/cron.d$ cat /usr/bin/cronjob_bandit24.sh 
#!/bin/bash

myname=$(whoami)

cd /var/spool/$myname
echo "Executing and deleting all scripts in /var/spool/$myname:"
for i in * .*;
do
    if [ "$i" != "." -a "$i" != ".." ];
    then
	echo "Handling $i"
	timeout -s 9 60 "./$i"
	rm -f "./$i"
    fi
done


bandit23@melinda:/etc/cron.d$ cd /var/spool/bandit24
bandit23@melinda:/var/spool/bandit24$ ls
bandit23@melinda:/var/spool/bandit24$ vi getpass.sh
#!/bin/bash
myname = $(whoami)
mytarget = $(echo I am user $myname | md5sum | cut -d '' -f 1)

echo "copying "
cat /etc/bandit_pass/bandit24 > /tmp/123


bandit23@melinda:/var/spool/bandit24$ ls /tmp/123 -l
-rw-rw-r-- 1 bandit24 bandit24 33 Aug 14 04:51 /tmp/123
bandit23@melinda:/var/spool/bandit24$ cat /tmp/123
UoMYTrfrBFHyQXmg6gzctqAwOmw1IohZ


--------------------------------------------------------------------------------------------------------------------
level 24
ssh bandit24@bandit.labs.overthewire.org
password: UoMYTrfrBFHyQXmg6gzctqAwOmw1IohZ

A daemon is listening on port 30002 and will give you the password for bandit25 if given the password for bandit24 and a secret numeric 4-digit pincode. There is no way to retrieve the pincode except by going through all of the 10000 combinaties, called brute-forcing.


UoMYTrfrBFHyQXmg6gzctqAwOmw1IohZ


#!/bin/bash
for i in $(seq $1 $2)
do
        printf "UoMYTrfrBFHyQXmg6gzctqAwOmw1IohZ $i "
        echo "UoMYTrfrBFHyQXmg6gzctqAwOmw1IohZ $i" | nc localhost 30002 | grep -v "I am" | grep -v "Wrong"
done

 

chmod +x crack.sh
cd /tmp/my12345 
./crack.sh 

optional: watch -n5 tail -n 30 hey.txt

UoMYTrfrBFHyQXmg6gzctqAwOmw1IohZ 5669 Correct!
The password of user bandit25 is uNG9O58gUE7snukf3bvZ0rxhtnjzSGzG


--------------------------------------------------------------------------------------------------------------------
level 25
ssh bandit25@bandit.labs.overthewire.org
password: uNG9O58gUE7snukf3bvZ0rxhtnjzSGzG

ssh -oStrictHostKeyChecking=no bandit26@localhost -i bandit26.sshkey  

displays 

 | |                   | (_) | |__ \ / /  
 | |__   __ _ _ __   __| |_| |_   ) / /_  
 | '_ \ / _` | '_ \ / _` | | __| / / '_ \ 
 | |_) | (_| | | | | (_| | | |_ / /| (_) |
 |_.__/ \__,_|_| |_|\__,_|_|\__|____\___/ 
Connection to localhost closed.

and then the connection closes. That means it displays 7 to 8 lines and closes it.

Changed the console font size to bigger one, so only four lines are displayed in console. then pressed 'v' command when more (%) was displayed. vi opened then did :r /etc/bandit_pass/bandit26

this displayed the password .

this is last password and last level !

thanks to google .. i used only for this level.

password is 5czgV9L3Xx8JPOyRbXh6lQbmIOWvPT6Z


--------------------------------------------------------------------------------------------------------------------
